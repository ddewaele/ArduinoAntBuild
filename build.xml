<?xml version="1.0" encoding="UTF-8"?>
<project name="embedded" default="dist">
	<property environment="env"/>
	<property file="build.properties"/>
	<property name="src"   location="."/>
	<property name="build" location="build/target"/>
	<property name="bin" location="build/bin"/>
	<property name="dist"  location="build"/>
	<property name="lib" location="lib"/>
	<property name="lib.build" location="lib/build"/>
	<property name="avr.compile.flags" value="-c -g -Os -Wall -fno-exceptions -ffunction-sections -fdata-sections -DUSB_VID=null -DUSB_PID=null -mmcu=${mcu.type} -DF_CPU=${mcu.frequency} -MMD -DARDUINO=${arduino.version}" />
	<property name="avr.link.flags" value="-Os -Wl,--gc-sections -mmcu=${mcu.type}" />

	<!-- Set the defaults -->
	<condition property="majorVersion" value="${env.majorVersion}" else="1">
	    <isset property="env.majorVersion" />
	</condition>

	<condition property="minorVersion" value="${env.minorVersion}" else="0">
	    <isset property="env.minorVersion" />
	</condition>

	<property name="sketchVersion" value="${majorVersion}-${minorVersion}"/>


	<target name="clean">
		<delete dir="${dist}" />
		<delete dir="${build}" />
		<delete dir="${bin}" />
	</target>
		
	<target name="dist-name">
		<property name="dist.name" value="${ant.project.name}-${sketchVersion}.bin"/>
		<echo>Building distribution : ${dist.name}</echo>
	</target>

	<target name="compile" depends="clean,dist-name">
		
		<path id="compile.includes.path">
			<dirset dir="${arduino-home}/hardware/arduino/cores/arduino" excludes="**/examples/**" />
			<dirset dir="${arduino-home}/hardware/arduino/variants/mega" excludes="**/examples/**" />
		
			<!--	
			<dirset dir="${src}/libraries/EEPROM" excludes="**/examples/**" />
			<dirset dir="${src}/libraries/SD" excludes="**/examples/**" />
			<dirset dir="${src}/libraries/Time" excludes="**/examples/**" />
			-->
			<dirset dir="${src}"/>	
		</path>
		
		<pathconvert property="compile.includes" refid="compile.includes.path" pathsep=" -I" />
		
		<mkdir dir="${bin}" />
		<!-- Create empty directory set -->
		<copy todir="${bin}">
			<dirset dir="${src}"/>
		</copy>
		
		<!-- Compile the sketches
		TODO: Add Arduino.h to file
		TODO: Add method prototypes after Arduino.h just as the ide does 
		TODO: Remove the manual .h file includes
		-->
		<copy todir="${bin}">
			<fileset dir="${src}" includes=" **/*.pde **/*.ino"/>
			<mapper type="regexp" from="^(.*)\.(pde|ino)" to="\1.cpp"/>
		</copy>

		<!--

		-->
		<replaceregexp byline="true">
		  <regexp pattern="#define MAJOR (.*)"/>
		  <substitution expression="#define MAJOR ${majorVersion}"/>
		  <fileset dir="${src}">
		    <include name="configuration.h"/>
		  </fileset>
		</replaceregexp>

		<replaceregexp byline="true">
		  <regexp pattern="#define MINOR (.*)"/>
		  <substitution expression="#define MINOR ${minorVersion}"/>
		  <fileset dir="${src}">
		    <include name="configuration.h"/>
		  </fileset>
		</replaceregexp>
		
	<!--	<apply executable="avr-g++" dest="${bin}" parallel="false" failonerror="true">
			<arg line="${avr.compile.flags}"/>
			<arg line="-I${compile.includes}"/>
			<srcfile/>
			<arg value="-o"/><targetfile/>
			<fileset dir="${bin}" includes="**/*.cpp" />
			<mapper type="glob" from="*.cpp" to="*.cpp.o"/>
		</apply>
	-->	
		<!-- Compile the libraries -->
		<apply executable="${arduino-home}/hardware/tools/avr/bin/avr-g++" dest="${bin}" failonerror="true">
			<arg line="${avr.compile.flags}"/>
			<arg line="-I${compile.includes}"/>
			<arg value="-o"/><targetfile/> <srcfile/>
			<fileset dir="${src}" includes="**/*.cpp" />
			<mapper type="glob" from="*.cpp" to="*.o"/>
		</apply>

		<echo>Copying libArduinoCore.a to ${bin}</echo>
		<copy todir="${bin}" failonerror="true">
			<fileset file ="./libs/libArduinoCore.a"/>
		</copy>
		
		<path id="link.includes.path">
			<fileset dir="${bin}" includes="**/*.o"/> 
		</path>
		


		
		<pathconvert property="link.includes" refid="link.includes.path" pathsep=" " />

		<mkdir dir="${bin}/binaries"/>

		<exec executable="${arduino-home}/hardware/tools/avr/bin/avr-gcc" failonerror="true">
			<arg line="${avr.link.flags}"/>
			<arg line="-o ${bin}/binaries/firmware.elf"/> 
			<arg line="${link.includes} ${bin}/libArduinoCore.a"/>
			<arg line="-L"/>
			<arg line="-lc -lm -lc"/>
		</exec>
		<exec executable="${arduino-home}/hardware/tools/avr/bin/avr-objcopy" failonerror="true">
			<arg line="-I elf32-avr"/>
			<arg line="-O binary"/>	
			<arg line="${bin}/binaries/firmware.elf ${bin}/binaries/${dist.name}"/>
		</exec>	
		
		<copy file="${bin}/binaries/${dist.name}" todir="${dist.path}"/>

	</target>
	
	<target name="cts-int" depends="compile"/>
</project>
